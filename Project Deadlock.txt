
#include<stdio.h>
#include<conio.h>
///////////////////////////////////////Bankers Algorithm//////////////////////////////////////////////
void Deadlockprevention() 
 { 
 printf("Deadlock prevention Bankers Algorithm Started:");
   int allocated[15][15],max[15][15],need[15][15],avail[15],tres[15],work[15],flag[15];
 int pno,rno,i,j,prc,count,t,total;
 count=0;
 printf("\n Enter number of process:");
 scanf("%d",&pno);
 printf("\n Enter number of resources:");
 scanf("%d",&rno);
 for(i=1;i<=pno;i++)
 {
  flag[i]=0;
 }
 printf("\n Enter total numbers of each resources:");
 for(i=1;i<= rno;i++)
  scanf("%d",&tres[i]);


 printf("\n Enter Max resources for each process:");
 for(i=1;i<= pno;i++)
 {
  printf("\n for process %d:",i);
  for(j=1;j<= rno;j++)
   scanf("%d",&max[i][j]);
 }


 printf("\n Enter allocated resources for each process:");
 for(i=1;i<= pno;i++)
 {
  printf("\n for process %d:",i);
  for(j=1;j<= rno;j++)
   scanf("%d",&allocated[i][j]);

 }

 printf("\n available resources:\n");
 for(j=1;j<= rno;j++)
 {
  avail[j]=0;
  total=0;
  for(i=1;i<= pno;i++)
  {
   total+=allocated[i][j];
  }
  avail[j]=tres[j]-total;
  work[j]=avail[j];
  printf("     %d \t",work[j]);
 }

 do
 {

 for(i=1;i<= pno;i++)
 {
  for(j=1;j<= rno;j++)
  {
   need[i][j]=max[i][j]-allocated[i][j];
  }
 }

 printf("\n Allocated matrix        Max      need");
 for(i=1;i<= pno;i++)
 {
  printf("\n");
  for(j=1;j<= rno;j++)
  {
   printf("%4d",allocated[i][j]);
  }
  printf("|");
  for(j=1;j<= rno;j++)
  {
   printf("%4d",max[i][j]);
  }
   printf("|");
  for(j=1;j<= rno;j++)
  {
   printf("%4d",need[i][j]);
  }
 }
  prc=0;
  for(i=1;i<= pno;i++)
  {
   if(flag[i]==0)
   {
    prc=i;

    for(j=1;j<= rno;j++)
    {
     if(work[j]< need[i][j])
     {
       prc=0;
       break;
     }
    }
   }

   if(prc!=0)
   break;
  }

  if(prc!=0)
  {
   printf("\n Process %d completed",i);
   count++;
   printf("\n Available matrix:");
   for(j=1;j<= rno;j++)
   {
    work[j]+=allocated[prc][j];
    allocated[prc][j]=0;
    max[prc][j]=0;
    flag[prc]=1;
    printf("   %d",work[j]);
   }
  }

 }while(count!=pno&&prc!=0);

 if(count==pno)
  printf("\nThe system is in a safe state!!");
 else
  printf("\nThe system is in an unsafe state!!"); 
 } 
 
 //////////////////////////////////////Deadlock Prediction//////////////////////////////////////////////////////
 
 void DeadlockPrediction() 
 { 
 printf("Deadlock Prediction Started:");
   int found,flag,l,p[4][5],tp,e[4][5],i,j,k=1,m[5],r[5],a[5],temp[5],sum=0,tr;
	printf("Enter Total number of Process:");
	scanf("%d",&tp);
	printf("Enter Total number of Resources:");
	scanf("%d",&tr);
	printf("Enter claim Matrix");
    for(i=0;i<tp;i++)
    {
    	for(j=0;j<tr;j++)
    	{
    		scanf("%d",&e[i][j]);
		}
	}
	/*printf("Enter Allocation Matrix");
    for(i=0;i<tp;i++)
    {
    	for(j=0;j<tr;j++)
    	{
    		scanf("%d",&p[i][j]);
		}
	}*/
    printf("Enter the Resource Vectors");
    for(i=0;i<tr;i++)
    {
    	scanf("%d",&r[i]);
    }  
	printf("Enter Avaialability Matrix"); 
	for(i=0;i<tr;i++)
    {
	   scanf("%d",&r[i]);
	   temp[i]=a[i];
    }
	for(i=0;i<tp;i++)
    {
    	sum=0;
    	for(j=0;j<tr;j++)
    	{
    		sum+=p[i][j];
		}
		if(sum==0)
		{
			m[k]=i;
			k++;
		}
	}
	for(i=0;i<tp;i++)
    {
    	for(l=1;l<tr;l++)
    	   if(i!=m[l])
    	   {
    	   	flag=1;
    	   	for(j=1;j<5;j++)
    	       if(e[i][j]>temp[j])
                {
                	flag=0;
                	break;
			    }    	   	    	
		    }
		    if(flag==1)
		    {
		    	m[k]=i;
		        k++;
		    	for(j=1;j<=tr;j++)
		    	{
		    		temp[j]+=p[i][j];
				}
			}
   }
			printf("\n deadlock causing process are");
			for(j=1;j<=tp;j++)
			{
				found=0;
				for(i=1;i<k;i++)
				{
					if(j==m[i])
					  found=1;
				}
				if(found==0)
				  printf("%d",j);
			 } 
 } 
 
 
 //////////////////////////////////////////Main Function///////////////////////////////////////////////////////
 
int main()
{	
int option;
printf("Select an opion \n 1)Deadlock prevention By Bankers Algo: \n 2)Prediction of Deadlock: \n ");
    scanf("%d", &option);
    switch(option)
    {
        case 1:
              Deadlockprevention();
            break;

        case 2:
             DeadlockPrediction();
            break;

       
        // operator doesn't match any case constant +, -, *, /
        default:
            printf("Error! option is not correct select from 1 or 2");
    }
  

    return 0;


	
}


